{{- $namespaceParts := split "-" .Release.Namespace }}
{{- $branch := index $namespaceParts "_1" }}
{{- $config := index .Values $branch }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-cfg
  namespace: {{ .Values.appName }}-{{ $branch }}
  labels:
    app: redis
data:
  master.conf: |
    bind 0.0.0.0
    maxclients 20000
    timeout 0
    appendonly no
    dbfilename dump.rdb
    dir /data
  slave.conf: |
    bind 0.0.0.0
    slaveof redis-0.redis-svc.{{ .Values.appName }}-{{ $branch }} 6379
    maxclients 20000
    timeout 0
    dir /data
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  namespace: {{ .Values.appName }}-{{ $branch }}
spec:
  serviceName: redis-svc
  replicas: {{ $config.redis.replicas }}
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      initContainers:
        - name: init-redis
          image: redis:latest
          command:
            - bash
            - -c
            - |
              set -ex
              # Generate redis server-id from pod ordinal index.
              [[ `hostname` =~ -([0-9]+)$ ]] || exit 1
              ordinal=${BASH_REMATCH[1]}
              # Copy appropriate redis config files from config-map to respective directories.
              if [[ $ordinal -eq 0 ]]; then
                cp /mnt/master.conf /etc/redis-config.conf
              else
                cp /mnt/slave.conf /etc/redis-config.conf
              fi
          volumeMounts:
            - name: redis-claim
              mountPath: /etc
            - name: config-map
              mountPath: /mnt/
      containers:
        - name: redis
          image: redis:latest
          ports:
            - containerPort: 6379
              name: redis
          command:
            - redis-server
            - /etc/redis-config.conf
          volumeMounts:
            - name: redis-data
              mountPath: /data
            - name: redis-claim
              mountPath: /etc
          resources:
            limits:
              cpu: {{ $config.redis.resources.limits.cpu }}
              memory: {{ $config.redis.resources.limits.memory }}
            requests:
              cpu: {{ $config.redis.resources.requests.cpu }}
              memory: {{ $config.redis.resources.requests.memory }}
      volumes:
        - name: config-map
          configMap:
            name: redis-cfg
        - name: redis-claim
          emptyDir: {}
        - name: redis-data
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: redis-svc
  namespace: {{ .Values.appName }}-{{ $branch }}
  labels:
    app: redis
spec:
  ports:
    - port: 6379
  clusterIP: None
  selector:
    app: redis
